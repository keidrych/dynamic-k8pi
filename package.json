{
  "name": "dynamic-k8pi",
  "version": "0.3.0",
  "description": "Kubernetes Automatic API Discovery & URL Path Creation",
  "homepage": "https://github.com/TayloredTechnology/dynamic-k8pi#readme",
  "main": "index.js",
  "author": {
    "name": "Taylored Technology"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/TayloredTechnology/dynamic-k8pi.git"
  },
  "bugs": {
    "url": "https://github.com/TayloredTechnology/dynamic-k8pi/issues"
  },
  "keywords": [
    "API",
    "Discovery",
    "K8's",
    "Kubernetes",
    "URL"
  ],
  "dependencies": {
    "axios": "^0.21.0",
    "co": "^4.6.0",
    "debug": "^3.1.0",
    "deep": "0.0.2",
    "fs-extra": "^5.0.0",
    "husky": "^0.15.0-rc.9",
    "js-yaml": "^3.11.0",
    "lodash": "^4.17.5",
    "per-env": "^1.0.2",
    "pino": "^4.15.2",
    "pino-debug": "^1.1.1",
    "redrun": "^6.0.1",
    "semver": "^5.5.0",
    "tap-lochnest": "^1.1.2",
    "tape": "^4.9.0",
    "tape-around": "^2.2.0",
    "tape-promise": "^3.0.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^6.1.3",
    "@commitlint/config-conventional": "^6.1.3",
    "@commitlint/lint": "^6.1.3",
    "@commitlint/prompt-cli": "^6.1.3",
    "chuhai": "^1.2.0",
    "clear-require": "2.0.0",
    "codecov": "^3.0.0",
    "conventional-changelog-cli": "1.3.16",
    "cz-conventional-changelog": "2.1.0",
    "faker": "^4.1.0",
    "fastest-validator": "0.6.5",
    "is-installed": "2.0.1",
    "lint-staged": "^7.0.0",
    "nock": "9.2.3",
    "os": "0.1.1",
    "tap": "11.1.2",
    "tap-dot": "^1.0.5",
    "tap-summary": "^4.0.0",
    "tape-index": "^1.1.1",
    "tapromise": "1.1.2",
    "testdouble": "3.5.2",
    "xo": "0.20.3"
  },
  "engines": {
    "node": ">=6"
  },
  "scripts": {
    "codecov:check": "nyc check-coverage --branches=50 --functions=50 --lines=90 --statements=50",
    "codecov:generate": "nyc report --reporter=text-lcov > coverage.lcov",
    "codecov:report": "nyc report --reporter=text",
    "codecov:upload": "codecov -t ",
    "commit": "commit",
    "commitmsg": "validate-commit-msg",
    "cz": "git-cz",
    "format": "redrun -p format:*",
    "format:prettier": "prettier --write '**/*.{format:*}'",
    "format:xo": "xo ./**/*.js",
    "lint": "xo ./**/*.js --ignore ./node_modules",
    "posttest": "redrun -p codecov:report codecov:check",
    "posttest:ci": "redrun -p codecov:*",
    "prestart:production": "tape '{,!(node_modules)/**/}*.?(sanity|api).js' | tap-dot",
    "syncSchemas": "if !(./node_modules/.bin/path-exists schemaAll); then node schema-container.js; else node getSchema.js; fi",
    "test": "per-env",
    "test:api": "nyc --cache --per-file --silent tape '{,!(node_modules)/**/}*.?(api).js' | tap-dot",
    "test:ci": "nyc --cache --per-file --silent tape '{,!(node_modules)/**/}*.?(spec|sanity|api).js' | tap-dot",
    "test:development": "nyc --cache --per-file --silent tape '{,!(node_modules)/**/}*.?(spec|sanity).js' | tap-dot",
    "test:sanity": "nyc --cache --per-file --silent tape '{,!(node_modules)/**/}*.?(sanity).js' | tap-dot"
  },
  "license": "SEE LICENSE IN LICENSE",
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -e $GIT_PARAMS",
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "linters": {
      "*.{js}": "xo",
      "*.{css,md}": [
        "prettier --write",
        "git add"
      ],
      "*.{spec,sanity,api}.js": [
        "nyc --per-file --check-coverage --branches=50 --functions=50 --lines=90 --statements=50 tape"
      ]
    },
    "ignore": [
      "CHANGELOG.md"
    ]
  },
  "xo": {
    "globals": [
      "_"
    ],
    "ignores": [
      "**/*.spec.js",
      "**/*.test.js",
      "app/backends/**/*.js"
    ],
    "prettier": true,
    "rules": {
      "generator-star-spacing": "off",
      "import/no-extraneous-dependencies": "off",
      "import/no-unassigned-import": "off",
      "import/no-unresolved": "off",
      "import/order": "off",
      "operator-linebreak": "off"
    },
    "semicolon": false
  }
}
